# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window_penjumlahan.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets  import QDialog
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QLabel, QMainWindow, QVBoxLayout, QWidget, QPushButton,QFileDialog, QDialog
from PyQt5.QtGui import QPixmap, QColor, QImage, qRgb
from PyQt5.QtCore import Qt


class Ui_ao_penjumlahan(QDialog):
    def setupUi(self, ao_penjumlahan):
        ao_penjumlahan.setObjectName("ao_penjumlahan")
        ao_penjumlahan.resize(1234, 927)
        self.Limg1 = QtWidgets.QLabel(ao_penjumlahan)
        self.Limg1.setGeometry(QtCore.QRect(20, 70, 581, 401))
        self.Limg1.setFrameShape(QtWidgets.QFrame.Box)
        self.Limg1.setTextFormat(QtCore.Qt.PlainText)
        self.Limg1.setAlignment(QtCore.Qt.AlignCenter)
        self.Limg1.setWordWrap(False)
        self.Limg1.setObjectName("Limg1")
        self.Limg2 = QtWidgets.QLabel(ao_penjumlahan)
        self.Limg2.setGeometry(QtCore.QRect(630, 70, 581, 401))
        self.Limg2.setFrameShape(QtWidgets.QFrame.Box)
        self.Limg2.setTextFormat(QtCore.Qt.PlainText)
        self.Limg2.setAlignment(QtCore.Qt.AlignCenter)
        self.Limg2.setObjectName("Limg2")
        self.LOutput = QtWidgets.QLabel(ao_penjumlahan)
        self.LOutput.setGeometry(QtCore.QRect(310, 490, 651, 421))
        self.LOutput.setFrameShape(QtWidgets.QFrame.Box)
        self.LOutput.setText("")
        self.LOutput.setObjectName("LOutput")
        self.btn_open = QtWidgets.QPushButton(ao_penjumlahan)
        self.btn_open.setGeometry(QtCore.QRect(140, 10, 271, 41))
        self.btn_open.setObjectName("btn_open")
        self.btn_open.clicked.connect(self.loadImage2)
        self.btn_save = QtWidgets.QPushButton(ao_penjumlahan)
        self.btn_save.setGeometry(QtCore.QRect(820, 10, 271, 41))
        self.btn_save.setObjectName("btn_save")
        self.btn_save.clicked.connect(self.saveImage)
        self.btn_proses = QtWidgets.QPushButton(ao_penjumlahan)
        self.btn_proses.setGeometry(QtCore.QRect(480, 10, 271, 41))
        self.btn_proses.setObjectName("btn_proses")
        self.btn_proses.clicked.connect(self.prosesPenjumlahan)

        self.retranslateUi(ao_penjumlahan)
        QtCore.QMetaObject.connectSlotsByName(ao_penjumlahan)

    def retranslateUi(self, ao_penjumlahan):
        _translate = QtCore.QCoreApplication.translate
        ao_penjumlahan.setWindowTitle(_translate("ao_penjumlahan", "Aritmathic Operation - Penjumlahan"))
        self.Limg1.setText(_translate("ao_penjumlahan", "Imgae 1"))
        self.Limg2.setText(_translate("ao_penjumlahan", "Image 2"))
        self.btn_open.setText(_translate("ao_penjumlahan", "Open"))
        self.btn_save.setText(_translate("ao_penjumlahan", "Save"))
        self.btn_proses.setText(_translate("ao_penjumlahan", "Proses"))
    
    def loadImage1(self):
        options = QFileDialog.Options()
        file_name, _ = QFileDialog.getOpenFileName(self, "Open Image 1", "", "Images (*.png *.jpg *.bmp *.jpeg);;All Files (*)", options=options)
        if file_name:
            pixmap = QPixmap(file_name)
            self.Limg1.setPixmap(pixmap)

    def loadImage2(self):
        if self.Limg1.pixmap() is not None:
            options = QFileDialog.Options()
            file_name, _ = QFileDialog.getOpenFileName(self, "Open Image 2", "", "Images (*.png *.jpg *.bmp *.jpeg);;All Files (*)", options=options)
            if file_name:
                pixmap = QPixmap(file_name)
                self.Limg2.setPixmap(pixmap)
                self.Limg2.setScaledContents(True)
                self.displayed_pixmap = pixmap
        
        else :
            options = QFileDialog.Options()
            file_name, _ = QFileDialog.getOpenFileName(self, "Open Image 1", "", "Images (*.png *.jpg *.bmp *.jpeg);;All Files (*)", options=options)
            if file_name:
                pixmap = QPixmap(file_name)
                self.Limg1.setPixmap(pixmap)
                self.Limg1.setScaledContents(True)
    
    def prosesPenjumlahan(self):
        pixmap1 = self.Limg1.pixmap()
        pixmap2 = self.Limg2.pixmap()
        if pixmap1 and pixmap2 :
            img1 = pixmap1.toImage()
            img2 = pixmap2.toImage()

            if img1.size() != img2.size():
                self.LOutput.setText("gambar harus memiliki ukuran yg sama")

            resul_keseluruhan = QImage(img1.size(), QImage.Format_RGB32)
            for x in range(img1.width()):
                for y in range(img1.height()):
                    pixel1 = QColor(img1.pixel(x,y))
                    pixel2 = QColor(img2.pixel(x,y))
            
                    jumlah_r = min(pixel1.red() + pixel2.red(), 255)
                    jumlah_g = min(pixel1.green() + pixel2.green(), 255)
                    jumlah_b = min(pixel1.blue() + pixel2.blue(), 255)
                    # r1, g1, b1, _ = pixel1.getRgb()
                    # r2, g2, b2, _ = pixel2.getRgb()
                    # r = min(r1 + r2, 255)
                    # g = min(g1 + g2, 255)
                    # b = min(b1 + b2, 255)
                    resul_keseluruhan.setPixel(x,y , qRgb(jumlah_r, jumlah_g, jumlah_b))

            jumlah_pixmap = QPixmap.fromImage(resul_keseluruhan)
            self.LOutput.setPixmap(jumlah_pixmap)
            self.LOutput.setScaledContents(True)
            self.displayed_pixmap = jumlah_pixmap

    def prosesPenjumlahan2(self):
        pixmap1 = self.Limg1.pixmap()
        pixmap2 = self.Limg2.pixmap()
        if pixmap1 and pixmap2 :
            img1 = pixmap1.toImage()
            img2 = pixmap2.toImage()

            # resul_keseluruhan = QImage(img1.size(), QImage.Format_RGB32)
            for x in range(img1.width()):
                for y in range(img1.height()):
                    pixel1 = img1.pixel(x,y)
            
            for x in range(img2.width()):
                for x in range(img2.height()):
                    pixel2 = img2.pixel(x,y)

            # jumlah_r = min(pixel1.red() + pixel2.red(), 255)
            # jumlah_g = min(pixel1.green() + pixel2.green(), 255)
            # jumlah_b = min(pixel1.blue() + pixel2.blue(), 255)
            jumlah = pixel1 + pixel2

            # resul_keseluruhan.setPixel(x,y , QColor(jumlah_r,jumlah_g,jumlah_b).rgb())

            jumlah_pixmap = QPixmap.fromImage(jumlah)
            self.LOutput.setPixmap(jumlah_pixmap)
    
    def saveImage(self):
        pixmap = self.LOutput.pixmap()
        if pixmap:
            saveFile = QtWidgets.QFileDialog()
            saveFile.setAcceptMode(QtWidgets.QFileDialog.AcceptSave)
            saveFile.setNameFilter("JPG File(*.jpg);; PNG FIles(*.png)")

            if saveFile.exec_() == QtWidgets.QDialog.Accepted:
                save_path = saveFile.selectedFiles()[0]
                self.displayed_pixmap.save(save_path)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ao_penjumlahan = QtWidgets.QWidget()
    ui = Ui_ao_penjumlahan()
    ui.setupUi(ao_penjumlahan)
    ao_penjumlahan.show()
    sys.exit(app.exec_())
